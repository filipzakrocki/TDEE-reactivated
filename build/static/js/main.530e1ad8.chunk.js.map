{"version":3,"sources":["components/Input/InputRowTitle/InputRowTitle.js","components/Input/InputRow/InputRow.js","components/Input/InputTable/InputTable.js","containers/Input/CurrentStats/CurrentStats.js","containers/Input/IntitialInputs/InitialInput.js","store/actions/calculator.js","store/actions/actionTypes.js","components/Input/InputColumn/InputColumn.js","components/Input/WeekLabel/WeekLabel.js","components/Input/InputColumnWrapper/InputColumnWrapper.js","debug/debug.jsx","containers/Input/Input.js","components/ResultRows/WeekRowWrapper/WeekRowWrapper.js","components/ResultRows/WeekRowCells/LabelCell/LabelCell.js","components/ResultRows/WeekRowCells/DayCell/DayCell.js","components/ResultRows/WeekRowCells/LockWeekButton/LockWeekButton.js","containers/Result/WeekRow/WeekRow.js","components/AddWeekBtn/AddWeekBtn.js","containers/Result/Result.js","App.js","serviceWorker.js","store/reducers/calculator.js","shared/utility.js","index.js"],"names":["InputRowTitle","props","children","className","InputRow","disabled","value","step","readOnly","changeHandler","type","label","isMetricSystem","units","isWeightLoss","onChange","e","target","min","max","required","InputTable","connect","state","avgWeightOverTime","calculator","startWeight","avgTdeeOverTime","dailyKcalChange","startDate","weeksForAvg","weeklyChange","goalWeight","tdee","weekData","avgWeight","totalLoss","setAvgTDEE","avgTdee","modifiedTdeeArray","filteredArray","length","filter","el","slice","reduce","a","b","Math","ceil","now","Date","day","getDate","month","getMonth","year","getFullYear","setCurrentDate","abs","toFixed","weeksNeeded","round","setWeeksNeeded","initialInputsLocked","dispatch","setStartWeight","enteredWeight","weightToTdee","Number","startingTdee","setGoalWeight","enteredGoal","setDailyKcalChange","kcalChange","dailyChange","weeklyWeightChange","parseInt","setWeeklyChange","setStartDate","date","dd","mm","yyyy","setWeeksForAverage","numberOfWeeks","floor","minValue","InputColumn","startingDayOfTheWeek","getDay","daysToShow","map","index","key","InputColumnWrapper","useState","user","setUser","onClick","localStorage","clear","console","log","userState","address","axios","put","then","res","saveState","get","setItem","JSON","stringify","data","window","location","reload","loadState","Input","WeekRowWrapper","WeekNumber","top","bottom","hiddenInMobileView","DayCell","weekIndex","dayIndex","dayWeight","dayKcal","locked","LockWeekButton","clickHandler","style","border","background","avgTdeeArray","setWeeklyKcalAndKg","week","weeklyWeight","getAverage","array","unit","prev","weeklyKcal","setWeeklyTdee","weeklyTdee","setKcalAndKg","kal","kilo","kcal","kg","lockWeek","weekNo","weekDays","useEffect","firstDateOfTheWeek","weeksToAdd","days","months","years","getYear","toDateString","generateDate","avgKcalForWeek","avgKcal","avgWeightForWeek","avgPreviousWeight","allWeeksData","modifiedWeekData","i","findLastWeight","weightChange","listOfDays","addAnotherWeek","weekEntry","updatedWeekNo","document","title","Boolean","hostname","match","localStorageState","updateObject","oldObject","updatedProperties","initialState","weeksToGoal","action","produce","draft","parse","getItem","reducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","calculatorReducer","store","createStore","applyMiddleware","ReduxThunk","app","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.530e1ad8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./InputRowTitle.scss\";\r\n\r\nconst InputRowTitle = props => {\r\n  const { children } = props;\r\n  return (\r\n    <div className=\"inputRowTitle\">\r\n      <h1>{children}</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputRowTitle;\r\n","import React from \"react\";\r\nimport \"./InputRow.scss\";\r\n\r\nconst InputRow = props => {\r\n  const {\r\n    disabled,\r\n    value,\r\n    step,\r\n    readOnly,\r\n    changeHandler,\r\n    type,\r\n    label,\r\n    isMetricSystem,\r\n    units,\r\n    isWeightLoss\r\n  } = props;\r\n\r\n  const handleChange = e => {\r\n    if (\r\n      (isWeightLoss && e.target.value > 0) ||\r\n      (!isWeightLoss && e.target.value < 0)\r\n    ) {\r\n      e.target.value = 0;\r\n    }\r\n    changeHandler(e.target.value, isMetricSystem);\r\n  };\r\n\r\n  return (\r\n    <tr className=\"inputRow\">\r\n      <td className=\"inputRow-label\">{label}</td>\r\n      <td className=\"inputRow-input\">\r\n        <input\r\n          onChange={handleChange}\r\n          disabled={disabled}\r\n          value={value}\r\n          min={isWeightLoss ? null : 0}\r\n          max={isWeightLoss ? 0 : null}\r\n          step={step}\r\n          readOnly={readOnly}\r\n          required\r\n          type={type}\r\n        />\r\n      </td>\r\n      <td className=\"inputRow-units\">{units}</td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default InputRow;\r\n","import React from \"react\";\r\nimport \"./InputTable.scss\";\r\n\r\nconst InputTable = props => {\r\n  const { children } = props;\r\n  return (\r\n    <table className=\"inputTable\">\r\n      <tbody>{children}</tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default InputTable;\r\n","import React from \"react\";\r\nimport \"./CurrentStats.scss\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport InputRowTitle from \"../../../components/Input/InputRowTitle/InputRowTitle\";\r\nimport InputRow from \"../../../components/Input/InputRow/InputRow\";\r\nimport InputTable from \"../../../components/Input/InputTable/InputTable\";\r\n\r\nconst CurrentStats = props => {\r\n  const {\r\n    avgWeightOverTime,\r\n    startWeight,\r\n    avgTdeeOverTime,\r\n    dailyKcalChange,\r\n    avgWeight,\r\n    isMetricSystem,\r\n    weeksForAvg,\r\n    weeklyChange,\r\n    goalWeight\r\n  } = props;\r\n\r\n  const totalLoss = startWeight - avgWeight;\r\n\r\n  const setCurrentDate = () => {\r\n    const now = new Date();\r\n    const day = now.getDate();\r\n    const month = now.getMonth() + 1;\r\n    const year = now.getFullYear();\r\n    const today = `${year}-${month < 10 ? \"0\" + month : month}-${\r\n      day < 10 ? \"0\" + day : day\r\n    }`;\r\n    return today;\r\n  };\r\n\r\n  const setWeeksNeeded = () => {\r\n    let weeksNeeded = Math.round(\r\n      ((avgWeightOverTime[avgWeightOverTime.length - 1] || startWeight) -\r\n        goalWeight) /\r\n        weeklyChange\r\n    );\r\n    return Math.abs(weeksNeeded);\r\n  };\r\n\r\n  const setAvgTDEE = (avgTdeeOverTime, weeksForAvg) => {\r\n    let avgTdee, modifiedTdeeArray, filteredArray;\r\n    if (avgTdeeOverTime.length === 1) {\r\n      return avgTdeeOverTime[0];\r\n    }\r\n    filteredArray = avgTdeeOverTime.filter(el => el);\r\n    modifiedTdeeArray = filteredArray.slice(\r\n      filteredArray.length - weeksForAvg,\r\n      filteredArray.length\r\n    );\r\n    avgTdee =\r\n      modifiedTdeeArray.reduce((a, b) => a + b, 0) / modifiedTdeeArray.length;\r\n    return Math.ceil(avgTdee);\r\n  };\r\n\r\n  return (\r\n    <div className=\"currentStats\">\r\n      <InputRowTitle children={\"Current Stats\"} />\r\n      <InputTable>\r\n        <InputRow\r\n          value={setCurrentDate()}\r\n          readOnly={true}\r\n          type=\"date\"\r\n          label=\"Today's Date\"\r\n        />\r\n        <InputRow\r\n          value={avgWeight || startWeight}\r\n          readOnly={true}\r\n          type=\"number\"\r\n          label=\"Your average weight\"\r\n          units={isMetricSystem ? \"kg\" : \"lbs\"}\r\n        />\r\n        <InputRow\r\n          value={Math.abs(totalLoss.toFixed(2))}\r\n          readOnly={true}\r\n          type=\"number\"\r\n          label={`You have ${avgWeight < startWeight ? \"lost\" : \"gained\"}`}\r\n          units={isMetricSystem ? \"kg\" : \"lbs\"}\r\n        />\r\n        <InputRow\r\n          value={`${setAvgTDEE(avgTdeeOverTime, weeksForAvg)}`}\r\n          readOnly={true}\r\n          type=\"number\"\r\n          label=\"Your average TDEE\"\r\n          units=\"kcal\"\r\n        />\r\n        <InputRow\r\n          value={setWeeksNeeded()}\r\n          readOnly={true}\r\n          type=\"number\"\r\n          label=\"Weeks to goal\"\r\n        />\r\n        <InputRow\r\n          value={`${setAvgTDEE(avgTdeeOverTime, weeksForAvg) +\r\n            dailyKcalChange}`}\r\n          onChange={null}\r\n          type=\"number\"\r\n          label=\"Recommended daily intake\"\r\n          units=\"kcal\"\r\n        />\r\n      </InputTable>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    avgWeightOverTime: state.calculator.avgWeightOverTime,\r\n    startWeight: state.calculator.startWeight,\r\n    avgTdeeOverTime: state.calculator.avgTdeeOverTime,\r\n    dailyKcalChange: state.calculator.dailyKcalChange,\r\n    startDate: state.calculator.startDate,\r\n    weeksForAvg: state.calculator.weeksForAvg,\r\n    weeklyChange: state.calculator.weeklyChange,\r\n    goalWeight: state.calculator.goalWeight,\r\n    isMetricSystem: state.calculator.isMetricSystem,\r\n    tdee: state.calculator.tdee,\r\n    weekData: state.calculator.weekData,\r\n    avgWeight: state.calculator.avgWeight\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(CurrentStats);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setStartWeight,\r\n  setGoalWeight,\r\n  setDailyKcalChange,\r\n  setWeeklyChange,\r\n  setStartDate,\r\n  setWeeksForAverage\r\n} from \"../../../store/actions/index\";\r\nimport \"./InitialInput.scss\";\r\n\r\nimport InputRowTitle from \"../../../components/Input/InputRowTitle/InputRowTitle\";\r\nimport InputRow from \"../../../components/Input/InputRow/InputRow\";\r\nimport InputTable from \"../../../components/Input/InputTable/InputTable\";\r\n\r\nconst InitialInput = props => {\r\n  const {\r\n    initialInputsLocked,\r\n    startDate,\r\n    startWeight,\r\n    dailyKcalChange,\r\n    weeklyChange,\r\n    goalWeight,\r\n    weeksForAvg,\r\n    isMetricSystem,\r\n    isWeightLoss,\r\n    setStartWeight,\r\n    setGoalWeight,\r\n    setDailyKcalChange,\r\n    setWeeklyChange,\r\n    setStartDate,\r\n    setWeeksForAverage\r\n  } = props;\r\n\r\n  return (\r\n    <div className=\"initialInput\">\r\n      <InputRowTitle>Initial Input</InputRowTitle>\r\n      <InputTable>\r\n        <InputRow\r\n          changeHandler={setStartDate}\r\n          value={startDate}\r\n          readOnly={initialInputsLocked}\r\n          type=\"date\"\r\n          label=\"Start Date\"\r\n        />\r\n        <InputRow\r\n          changeHandler={setStartWeight}\r\n          value={startWeight}\r\n          readOnly={initialInputsLocked}\r\n          step={0.1}\r\n          minValue={1}\r\n          type=\"number\"\r\n          label=\"Starting Weight\"\r\n          isMetricSystem={isMetricSystem}\r\n          units={isMetricSystem ? \"kg\" : \"lbs\"}\r\n        />\r\n        <InputRow\r\n          changeHandler={setGoalWeight}\r\n          value={goalWeight}\r\n          type=\"number\"\r\n          step={0.5}\r\n          minValue={1}\r\n          label=\"Goal Weight\"\r\n          units={isMetricSystem ? \"kg\" : \"lbs\"}\r\n        />\r\n        <InputRow\r\n          changeHandler={setWeeklyChange}\r\n          step={0.05}\r\n          value={weeklyChange}\r\n          isWeightLoss={isWeightLoss}\r\n          type=\"number\"\r\n          label={\"Weekly Weight Change\"}\r\n          units={isMetricSystem ? \"kg\" : \"lbs\"}\r\n        />\r\n        <InputRow\r\n          changeHandler={setDailyKcalChange}\r\n          value={dailyKcalChange}\r\n          isWeightLoss={isWeightLoss}\r\n          type=\"number\"\r\n          step={10}\r\n          label={`Rquired Daily Kcal change`}\r\n          units=\"kcal\"\r\n        />\r\n        <InputRow\r\n          changeHandler={setWeeksForAverage}\r\n          value={weeksForAvg}\r\n          type=\"number\"\r\n          step={1}\r\n          min={1}\r\n          max={4}\r\n          label={`Calculate last # weeks`}\r\n          units=\"weeks\"\r\n        />\r\n      </InputTable>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    startWeight: state.calculator.startWeight,\r\n    dailyKcalChange: state.calculator.dailyKcalChange,\r\n    startDate: state.calculator.startDate,\r\n    weeklyChange: state.calculator.weeklyChange,\r\n    goalWeight: state.calculator.goalWeight,\r\n    initialInputsLocked: state.calculator.initialInputsLocked,\r\n    isWeightLoss: state.calculator.isWeightLoss,\r\n    isMetricSystem: state.calculator.isMetricSystem,\r\n    weeksForAvg: state.calculator.weeksForAvg\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setStartWeight: (enteredWeight, isMetricSystem) =>\r\n      dispatch(setStartWeight(enteredWeight, isMetricSystem)),\r\n    setGoalWeight: enteredGoal => dispatch(setGoalWeight(enteredGoal)),\r\n    setDailyKcalChange: kcalChange => dispatch(setDailyKcalChange(kcalChange)),\r\n    setWeeklyChange: weeklyChange => dispatch(setWeeklyChange(weeklyChange)),\r\n    setStartDate: startDate => dispatch(setStartDate(startDate)),\r\n    setWeeksForAverage: numberOfWeeks =>\r\n      dispatch(setWeeksForAverage(numberOfWeeks))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InitialInput);\r\n","import * as actionTypes from \"./actionTypes\";\r\n// import axios from \"axios\";\r\n\r\nexport const setStartWeight = (enteredWeight, isMetricSystem) => {\r\n  let modifier = isMetricSystem ? 33 : 15;\r\n  const weightToTdee = modifier * enteredWeight;\r\n  return {\r\n    type: actionTypes.SET_START_WEIGHT,\r\n    enteredWeight: Number(enteredWeight),\r\n    startingTdee: Math.ceil(weightToTdee)\r\n  };\r\n};\r\n\r\nexport const setGoalWeight = enteredGoal => {\r\n  return {\r\n    type: actionTypes.SET_GOAL_WEIGHT,\r\n    enteredGoal: Number(enteredGoal)\r\n  };\r\n};\r\n\r\nexport const setWeeksForAverage = numberOfWeeks => {\r\n  if (numberOfWeeks > 4) {\r\n    numberOfWeeks = 4;\r\n  } else if (numberOfWeeks < 1) {\r\n    numberOfWeeks = 1;\r\n  }\r\n\r\n  return {\r\n    type: actionTypes.SET_WEEKS_FOR_AVG,\r\n    numberOfWeeks: Math.floor(numberOfWeeks)\r\n  };\r\n};\r\n\r\nexport const setWeeklyChange = weeklyChange => {\r\n  const kcalChange = weeklyChange * 1100;\r\n\r\n  return {\r\n    type: actionTypes.SET_WEEKLY_CHANGE,\r\n    weeklyChange: Number(weeklyChange),\r\n    dailyKcalChange: Math.ceil(kcalChange)\r\n  };\r\n};\r\n\r\nexport const setDailyKcalChange = dailyChange => {\r\n  const weeklyWeightChange = dailyChange / 1100;\r\n\r\n  return {\r\n    type: actionTypes.SET_DAILY_KCAL_CHANGE,\r\n    dailyKcalChange: parseInt(dailyChange),\r\n    weeklyChange: weeklyWeightChange.toFixed(2)\r\n  };\r\n};\r\n\r\nexport const setKcalAndKg = (kcal, kg, week, day) => {\r\n  return {\r\n    type: actionTypes.SET_KCAL_AND_KG,\r\n    kcal: kcal,\r\n    kg: kg,\r\n    week: week,\r\n    day: day\r\n  };\r\n};\r\n\r\nexport const setWeeklyKcalAndKg = (week, weekIndex) => {\r\n  let weeklyKcal, weeklyWeight;\r\n\r\n  const getAverage = (array, unit) => {\r\n    let filteredArray = array.filter(el => el[unit]);\r\n    if (filteredArray.length === 0) {\r\n      return 0;\r\n    }\r\n    return (\r\n      filteredArray.reduce((prev, day) => prev + day[unit], 0) /\r\n      filteredArray.length\r\n    );\r\n  };\r\n\r\n  weeklyWeight = getAverage(week, \"kg\").toFixed(2);\r\n  weeklyKcal = Math.ceil(getAverage(week, \"kcal\"));\r\n\r\n  return {\r\n    type: actionTypes.SET_WEEKLY_KCAL_AND_KG,\r\n    weekIndex: weekIndex,\r\n    weeklyKcal: weeklyKcal,\r\n    weeklyWeight: Number(weeklyWeight)\r\n  };\r\n};\r\n\r\nexport const setWeeklyTdee = (weeklyTdee, weekIndex) => {\r\n  return {\r\n    type: actionTypes.SET_WEEKLY_TDEE,\r\n    weekIndex: weekIndex,\r\n    tdee: Math.ceil(weeklyTdee)\r\n  };\r\n};\r\n\r\nexport const addAnotherWeek = weekNo => {\r\n  let weekEntry = {\r\n    week: weekNo,\r\n    days: [\r\n      { kg: \"\", kcal: \"\" },\r\n      { kg: \"\", kcal: \"\" },\r\n      { kg: \"\", kcal: \"\" },\r\n      { kg: \"\", kcal: \"\" },\r\n      { kg: \"\", kcal: \"\" },\r\n      { kg: \"\", kcal: \"\" },\r\n      { kg: \"\", kcal: \"\" }\r\n    ],\r\n    avgKcal: 0,\r\n    avgWeight: 0,\r\n    locked: false\r\n  };\r\n\r\n  return {\r\n    type: actionTypes.ADD_ANOTHER_WEEK,\r\n    weekEntry: weekEntry,\r\n    updatedWeekNo: weekNo + 1\r\n  };\r\n};\r\n\r\nexport const lockWeek = weekIndex => {\r\n  return {\r\n    type: actionTypes.LOCK_WEEK,\r\n    weekIndex: weekIndex\r\n  };\r\n};\r\n\r\nexport const setStartDate = startDate => {\r\n  let date = startDate;\r\n  if (!startDate) {\r\n    const now = new Date();\r\n    const dd = now.getDate();\r\n    const mm = now.getMonth() + 1;\r\n    const yyyy = now.getFullYear();\r\n    const today = `${yyyy}-${mm < 10 ? \"0\" + mm : mm}-${\r\n      dd < 10 ? \"0\" + dd : dd\r\n    }`;\r\n    date = today;\r\n  }\r\n  return {\r\n    type: actionTypes.SET_START_DATE,\r\n    startDate: date\r\n  };\r\n};\r\n\r\n// export const setLoadedImages = () => {\r\n//   return {\r\n//     type: actionTypes.SET_LOADED_IMAGES\r\n//   };\r\n// };\r\n// export const clearLoadedImages = () => {\r\n//   return {\r\n//     type: actionTypes.CLEAR_LOADED_IMAGES\r\n//   };\r\n// };\r\n\r\n// export const fetchPokemon = pokemonQuery => {\r\n//   return async dispatch => {\r\n//     let params;\r\n//     //default path\r\n//     let query = \"https://api.pokemontcg.io/v1/cards\";\r\n//     document.title = `Pokedex${\": \" + pokemonQuery}`;\r\n\r\n//     dispatch(fetchStarted());\r\n//     dispatch(clearLoadedImages());\r\n\r\n//     //query builder if input is present\r\n//     if (pokemonQuery) {\r\n//       let array = pokemonQuery.split(\" \").map((string, index) => {\r\n//         let modStr = string.replace(\">\", \"=gt\").replace(\"<\", \"=lt\");\r\n//         if (index > 0) {\r\n//           return `&${modStr}`;\r\n//         }\r\n//         if (!modStr.includes(\"=\")) {\r\n//           return `name=${string}`;\r\n//         }\r\n//         return modStr;\r\n//       });\r\n//       params = `?${array.join(\"\")}`;\r\n//       query = `https://api.pokemontcg.io/v1/cards` + params;\r\n//     }\r\n\r\n//     try {\r\n//       const results = await axios.get(query);\r\n//       const cardsArray = await results.data.cards;\r\n//       dispatch(setResults(cardsArray));\r\n//       dispatch(fetchFinished());\r\n//     } catch (error) {\r\n//       dispatch(setError(error));\r\n//       dispatch(fetchFinished());\r\n//     }\r\n//   };\r\n// };\r\n\r\n// export const closeModal = () => {\r\n//   return {\r\n//     type: actionTypes.CLOSE_MODAL\r\n//   };\r\n// };\r\n\r\n// export const openModal = clickedCardIndex => {\r\n//   return {\r\n//     type: actionTypes.OPEN_MODAL,\r\n//     selectedCard: clickedCardIndex\r\n//   };\r\n// };\r\n","export const SET_START_WEIGHT = \"SET_START_WEIGHT\";\r\nexport const SET_GOAL_WEIGHT = \"SET_GOAL_WEIGHT\";\r\nexport const SET_WEEKLY_CHANGE = \"SET_WEEKLY_CHANGE\";\r\nexport const SET_DAILY_KCAL_CHANGE = \"SET_DAILY_KCAL_CHANGE\";\r\nexport const SET_START_DATE = \"SET_START_DATE\";\r\nexport const SET_WEEKS_FOR_AVG = \"SET_WEEKS_FOR_AVG\";\r\n\r\nexport const SET_KCAL_AND_KG = \"SET_KCAL_AND_KG\";\r\nexport const SET_WEEKLY_KCAL_AND_KG = \"SET_WEEKLY_KCAL_AND_KG\";\r\nexport const SET_WEEKLY_TDEE = \"SET_WEEKLY_TDEE\";\r\n\r\nexport const ADD_ANOTHER_WEEK = \"ADD_ANOTHER_WEEK\";\r\nexport const LOCK_WEEK = \"LOCK_WEEK\";\r\n","import React from \"react\";\r\nimport \"./InputColumn.scss\";\r\n\r\nconst InputColumn = props => {\r\n  const { children } = props;\r\n\r\n  return <div className=\"inputColumn\">{children}</div>;\r\n};\r\n\r\nexport default InputColumn;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./WeekLabel.scss\";\r\n\r\nconst WeekLabel = props => {\r\n  const { startDate } = props;\r\n\r\n  const startingDayOfTheWeek = new Date(startDate).getDay();\r\n\r\n  const DAYS = [\r\n    \"Sun.\",\r\n    \"Mon.\",\r\n    \"Tues.\",\r\n    \"Wed.\",\r\n    \"Thurs.\",\r\n    \"Fri.\",\r\n    \"Sat.\",\r\n    \"Sun.\",\r\n    \"Mon.\",\r\n    \"Tues.\",\r\n    \"Wed.\",\r\n    \"Thurs.\",\r\n    \"Fri.\",\r\n    \"Sat.\"\r\n  ];\r\n\r\n  const daysToShow = startDate\r\n    ? DAYS.slice(startingDayOfTheWeek, startingDayOfTheWeek + 7)\r\n    : [\"\", \"\", \"\", \"\", \"\", \"\", \"\"];\r\n\r\n  return (\r\n    <div className=\"weekLabel\">\r\n      <div className=\"weekLabel-wrapper\">\r\n        <div className=\"weekLabel-label\"> Week</div>\r\n        <div className=\"weekLabel-label noMobile\"> Stats</div>\r\n        {daysToShow.map((day, index) => (\r\n          <div key={index} className=\"weekLabel-dayLabel\">\r\n            {\" \" + day}\r\n          </div>\r\n        ))}\r\n        <div className=\"weekLabel-label noMobile\"> Avg.</div>\r\n        <div className=\"weekLabel-label noMobile\"> ∆</div>\r\n        <div className=\"weekLabel-label\"> TDEE</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    startDate: state.calculator.startDate\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(WeekLabel);\r\n","import React from \"react\";\r\nimport \"./InputColumnWrapper.scss\";\r\n\r\nconst InputColumnWrapper = props => {\r\n  const { children } = props;\r\n  return <div className=\"inputColumnWrapper\">{children}</div>;\r\n};\r\n\r\nexport default InputColumnWrapper;\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"axios\";\r\n\r\nconst Debugg = props => {\r\n  const { state } = props;\r\n  const [user, setUser] = useState(\"\");\r\n\r\n  const saveState = (userState, user) => {\r\n    let address = `https://tdee-fit.firebaseio.com/states/${user}.json`;\r\n    axios.put(address, userState).then(res => console.log(\"SUCCESS\"));\r\n  };\r\n\r\n  const loadState = user => {\r\n    let address = `https://tdee-fit.firebaseio.com/states/${user}.json`;\r\n    axios\r\n      .get(address)\r\n      .then(res => localStorage.setItem(\"state\", JSON.stringify(res.data)))\r\n      .then(res => window.location.reload());\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input type=\"text\" value={user} onChange={e => setUser(e.target.value)} />\r\n      <button onClick={() => localStorage.clear()}>CLEAR THE STORAGE</button>\r\n      <button onClick={() => console.log(state)}>CONSOLE.LOG THE STATE</button>\r\n      <button onClick={() => saveState(state, user)}>\r\n        SAVE STATE TO FIREBASE\r\n      </button>\r\n      <button onClick={() => loadState(user)}>LOAD STATE FROM FIREBASE</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    state: state.calculator\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(Debugg);\r\n","import React from \"react\";\r\nimport \"./Input.scss\";\r\n\r\nimport CurrentStats from \"./CurrentStats/CurrentStats\";\r\nimport InitialInput from \"./IntitialInputs/InitialInput\";\r\nimport InputColumn from \"../../components/Input/InputColumn/InputColumn\";\r\nimport WeekLabel from \"../../components/Input/WeekLabel/WeekLabel\";\r\nimport InputColumnWrapper from \"../../components/Input/InputColumnWrapper/InputColumnWrapper\";\r\n\r\nimport Debug from '../../debug/debug'\r\n\r\nconst Input = () => {\r\n  return (\r\n    <>\r\n      <section className=\"input\">\r\n        <Debug/>\r\n        <InputColumnWrapper>\r\n          <InputColumn>\r\n            <InitialInput />\r\n          </InputColumn>\r\n          <InputColumn>\r\n            <CurrentStats />\r\n          </InputColumn>\r\n        </InputColumnWrapper>\r\n        <WeekLabel />\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nimport \"./WeekRowWrapper.scss\";\r\n\r\nconst WeekRowWrapper = props => {\r\n  const { children } = props;\r\n\r\n  return (\r\n    <div className=\"weekRow\">\r\n      <div className=\"weekRow-wrapper\">{children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeekRowWrapper;\r\n","import React from \"react\";\r\nimport \"./LabelCell.scss\";\r\n\r\nconst WeekNumber = props => {\r\n  let { top, bottom, children, hiddenInMobileView } = props;\r\n\r\n  return (\r\n    <div className={`LabelCell ${hiddenInMobileView ? \"mobileViewHide\" : \"\"}`}>\r\n      <p>{top}</p>\r\n      {children}\r\n      <p>{bottom}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeekNumber;\r\n","import React from \"react\";\r\nimport \"./DayCell.scss\";\r\n\r\nconst DayCell = props => {\r\n  const {\r\n    weekIndex,\r\n    dayIndex,\r\n    dayWeight,\r\n    dayKcal,\r\n    locked,\r\n    changeHandler\r\n  } = props;\r\n\r\n  const handleWeightChange = e => {\r\n    changeHandler(dayKcal, e.target.value, weekIndex, dayIndex);\r\n  };\r\n\r\n  const handleKcalChange = e => {\r\n    changeHandler(e.target.value, dayWeight, weekIndex, dayIndex);\r\n  };\r\n\r\n  return (\r\n    <div className=\"weekRow-entry\">\r\n      <input\r\n        type=\"number\"\r\n        onChange={handleWeightChange}\r\n        value={dayWeight}\r\n        readOnly={locked}\r\n      ></input>\r\n      <input\r\n        type=\"number\"\r\n        onChange={handleKcalChange}\r\n        value={dayKcal}\r\n        readOnly={locked}\r\n      ></input>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DayCell;\r\n","import React from \"react\";\r\nimport \"./LockWeekButton.scss\";\r\n\r\nconst LockWeekButton = props => {\r\n  let { locked, clickHandler } = props;\r\n  return (\r\n    <button\r\n      style={{ border: \"none\", background: \"white\" }}\r\n      onClick={clickHandler}\r\n    >\r\n      {locked ? \"🔒\" : \"✔️\"}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default LockWeekButton;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setWeeklyKcalAndKg,\r\n  setWeeklyTdee,\r\n  setKcalAndKg,\r\n  lockWeek\r\n} from \"../../../store/actions/index\";\r\nimport \"./WeekRow.scss\";\r\n\r\nimport WeekRowWrapper from \"../../../components/ResultRows/WeekRowWrapper/WeekRowWrapper\";\r\n\r\n//cell components\r\nimport LabelCell from \"../../../components/ResultRows/WeekRowCells/LabelCell/LabelCell\";\r\nimport DayCell from \"../../../components/ResultRows/WeekRowCells/DayCell/DayCell\";\r\nimport LockWeekButton from \"../../../components/ResultRows/WeekRowCells/LockWeekButton/LockWeekButton\";\r\n\r\nconst WeekRow = props => {\r\n  const {\r\n    weekNo,\r\n    startDate,\r\n    startWeight,\r\n    weekData,\r\n    weekIndex,\r\n    weekDays,\r\n    locked,\r\n    setWeeklyKcalAndKg,\r\n    setWeeklyTdee,\r\n    setKcalAndKg,\r\n    lockWeek\r\n  } = props;\r\n\r\n  useEffect(() => {\r\n    setWeeklyKcalAndKg(weekDays, weekIndex);\r\n  });\r\n\r\n  useEffect(() => {\r\n    setWeeklyTdee(weeklyTdee, weekIndex);\r\n  });\r\n\r\n  const generateDate = (date, weeksToAdd) => {\r\n    let startDate, days, months, years, daysToAdd, outputDate, formattedDate;\r\n    startDate = new Date(date);\r\n    days = startDate.getDate();\r\n    months = startDate.getMonth();\r\n    years = startDate.getYear() + 1900;\r\n    daysToAdd = weeksToAdd * 7 - 7;\r\n    outputDate = new Date(years, months, days + daysToAdd);\r\n    formattedDate = outputDate.toDateString().slice(3);\r\n    return formattedDate;\r\n  };\r\n\r\n  const findLastWeight = (index, allWeeksData) => {\r\n    let modifiedWeekData = allWeeksData.slice(0, index);\r\n    for (var i = modifiedWeekData.length - 1; i >= 0; i--) {\r\n      if (modifiedWeekData[i].avgWeight) {\r\n        return modifiedWeekData[i].avgWeight;\r\n      }\r\n    }\r\n  };\r\n\r\n  const firstDateOfTheWeek = startDate && generateDate(startDate, weekNo);\r\n\r\n  const avgKcalForWeek = weekData[weekIndex].avgKcal;\r\n  const avgWeightForWeek = weekData[weekIndex].avgWeight;\r\n\r\n  const avgPreviousWeight =\r\n    weekIndex > 0 ? findLastWeight(weekIndex, weekData) : startWeight;\r\n\r\n  const weightChange = avgWeightForWeek\r\n    ? avgWeightForWeek - avgPreviousWeight\r\n    : 0;\r\n\r\n  const weeklyTdee = avgKcalForWeek - weightChange * 1100;\r\n\r\n  const listOfDays = weekData[weekIndex].days.map((day, dayIndex) => {\r\n    return (\r\n      <DayCell\r\n        key={weekIndex + dayIndex}\r\n        dayIndex={dayIndex}\r\n        weekIndex={weekIndex}\r\n        dayWeight={day.kg}\r\n        dayKcal={day.kcal}\r\n        changeHandler={setKcalAndKg}\r\n        locked={locked}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <WeekRowWrapper>\r\n      <LabelCell top={`Week ${weekNo}`} bottom={firstDateOfTheWeek} />\r\n      <LabelCell top={\"kg\"} bottom={\"kcal\"} hiddenInMobileView>\r\n        <LockWeekButton\r\n          locked={locked}\r\n          clickHandler={() => lockWeek(weekIndex)}\r\n        />\r\n      </LabelCell>\r\n      {weekData && listOfDays}\r\n      <LabelCell\r\n        top={`${avgWeightForWeek.toFixed(2)} kg`}\r\n        bottom={`${Math.ceil(avgKcalForWeek)} kcal`}\r\n        hiddenInMobileView\r\n      />\r\n      <LabelCell top={`${weightChange.toFixed(2)} kg`} />\r\n      <LabelCell top={Math.ceil(weeklyTdee) + \" KCAL\"} />\r\n    </WeekRowWrapper>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    weekData: state.calculator.weekData,\r\n    startWeight: state.calculator.startWeight,\r\n    avgTdeeArray: state.calculator.avgTdeeArray\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setWeeklyKcalAndKg: (week, index) =>\r\n      dispatch(setWeeklyKcalAndKg(week, index)),\r\n    setWeeklyTdee: (weeklyTdee, weekIndex) =>\r\n      dispatch(setWeeklyTdee(weeklyTdee, weekIndex)),\r\n    setKcalAndKg: (kal, kilo, weekIndex, dayIndex) =>\r\n      dispatch(setKcalAndKg(kal, kilo, weekIndex, dayIndex)),\r\n    lockWeek: weekIndex => dispatch(lockWeek(weekIndex))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WeekRow);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./AddWeekBtn.scss\";\r\n\r\nimport { addAnotherWeek } from \"../../store/actions/index\";\r\n\r\nconst AddWeekBtn = props => {\r\n  const { weekNo, addAnotherWeek } = props;\r\n\r\n  return (\r\n    <button onClick={() => addAnotherWeek(weekNo)} className=\"addWeekBtn\">\r\n      Start another week\r\n    </button>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    weekNo: state.calculator.weekNo\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addAnotherWeek: weekNo => dispatch(addAnotherWeek(weekNo))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddWeekBtn);\r\n","import React from \"react\";\r\nimport \"./Result.scss\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport WeekRow from \"./WeekRow/WeekRow\";\r\n\r\nimport AddWeekBtn from \"../../components/AddWeekBtn/AddWeekBtn\";\r\n\r\nconst Result = props => {\r\n  const { weekData, startDate } = props;\r\n\r\n  return (\r\n    <section className=\"result\">\r\n      {weekData.map((week, weekIndex) => (\r\n        <WeekRow\r\n          key={weekIndex}\r\n          weekNo={week.week}\r\n          startDate={startDate}\r\n          weekIndex={weekIndex}\r\n          weekDays={week.days}\r\n          locked={week.locked}\r\n        />\r\n      ))}\r\n      <AddWeekBtn />\r\n    </section>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    weekData: state.calculator.weekData,\r\n    startDate: state.calculator.startDate\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Result);\r\n","import React, { useEffect } from \"react\";\r\nimport \"./App.scss\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Input from \"./containers/Input/Input\";\r\nimport Result from \"./containers/Result/Result\";\r\n\r\nfunction App (props) {\r\n\r\n  //saving to localStorage on any state change\r\n  useEffect(() => {\r\n    window.localStorage.setItem(\"state\", JSON.stringify(props.state));\r\n  }, [props.state]);\r\n\r\n\r\n  document.title = 'TDEE.fit'\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Input />\r\n      <Result />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    state: state.calculator\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from \"../actions/actionTypes\";\r\nimport { updateObject } from \"../../shared/utility\";\r\nimport produce from \"immer\";\r\n\r\nconst initialState = {\r\n  startDate: \"\",\r\n  startWeight: 0,\r\n  goalWeight: 0,\r\n  isWeightLoss: null,\r\n  dailyKcalChange: 0,\r\n  weeklyChange: 0,\r\n  weeksForAvg: 2,\r\n  avgTdeeOverTime: [],\r\n  avgWeightOverTime: [],\r\n  weeksToGoal: 0,\r\n  avgWeight: 0,\r\n  weekNo: 1,\r\n  isMetricSystem: true,\r\n  initialInputsLocked: false,\r\n  tdee: 0,\r\n  weekData: []\r\n};\r\n\r\nconst setStartWeight = (state, action) => {\r\n  return updateObject(state, {\r\n    startWeight: action.enteredWeight,\r\n    avgWeightOverTime: [action.enteredWeight],\r\n    avgTdeeOverTime: [action.startingTdee],\r\n    isWeightLoss: action.enteredWeight > state.goalWeight\r\n  });\r\n};\r\nconst setGoalWeight = (state, action) => {\r\n  return updateObject(state, {\r\n    goalWeight: action.enteredGoal,\r\n    isWeightLoss: state.startWeight > action.enteredGoal\r\n  });\r\n};\r\nconst setDailyKcalChange = (state, action) => {\r\n  return updateObject(state, {\r\n    dailyKcalChange: action.dailyKcalChange,\r\n    weeklyChange: action.weeklyChange\r\n  });\r\n};\r\nconst setWeeklyChange = (state, action) => {\r\n  return updateObject(state, {\r\n    weeklyChange: action.weeklyChange,\r\n    dailyKcalChange: action.dailyKcalChange\r\n  });\r\n};\r\n\r\nconst setWeeksForAverage = (state, action) => {\r\n  return produce(state, draft => {\r\n    draft.weeksForAvg = action.numberOfWeeks;\r\n  });\r\n};\r\n\r\nconst setStartDate = (state, action) => {\r\n  return updateObject(state, { startDate: action.startDate });\r\n};\r\n\r\nconst setKcalAndKg = (state, action) => {\r\n  return produce(state, draft => {\r\n    draft.weekData[action.week].days[action.day] = {\r\n      kg: Number(action.kg),\r\n      kcal: Number(action.kcal)\r\n    };\r\n  });\r\n};\r\n\r\nconst setWeeklyKcalAndKg = (state, action) => {\r\n  return produce(state, draft => {\r\n    draft.avgWeightOverTime[action.weekIndex + 1] = action.weeklyWeight;\r\n    draft.weekData[action.weekIndex].avgWeight = action.weeklyWeight;\r\n    draft.weekData[action.weekIndex].avgKcal = action.weeklyKcal;\r\n    if (action.weeklyWeight) {\r\n      draft.avgWeight = action.weeklyWeight;\r\n    }\r\n  });\r\n};\r\n\r\nconst setWeeklyTdee = (state, action) => {\r\n  return produce(state, draft => {\r\n    draft.avgTdeeOverTime[action.weekIndex + 1] = action.tdee;\r\n  });\r\n};\r\n\r\nconst addAnotherWeek = (state, action) => {\r\n  return produce(state, draft => {\r\n    draft.weekData = [...state.weekData, action.weekEntry];\r\n    draft.weekNo = action.updatedWeekNo;\r\n    draft.initialInputsLocked = true;\r\n  });\r\n};\r\n\r\nconst lockWeek = (state, action) => {\r\n  return produce(state, draft => {\r\n    draft.weekData[action.weekIndex].locked = !state.weekData[action.weekIndex]\r\n      .locked;\r\n  });\r\n};\r\n\r\nlet localStorageState = null;\r\nlocalStorageState = JSON.parse(window.localStorage.getItem(\"state\"));\r\n\r\nconst reducer = (state = localStorageState || initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SET_START_WEIGHT:\r\n      return setStartWeight(state, action);\r\n    case actionTypes.SET_GOAL_WEIGHT:\r\n      return setGoalWeight(state, action);\r\n    case actionTypes.SET_DAILY_KCAL_CHANGE:\r\n      return setDailyKcalChange(state, action);\r\n    case actionTypes.SET_WEEKLY_CHANGE:\r\n      return setWeeklyChange(state, action);\r\n    case actionTypes.SET_START_DATE:\r\n      return setStartDate(state, action);\r\n    case actionTypes.SET_WEEKS_FOR_AVG:\r\n      return setWeeksForAverage(state, action);\r\n    case actionTypes.ADD_ANOTHER_WEEK:\r\n      return addAnotherWeek(state, action);\r\n    case actionTypes.LOCK_WEEK:\r\n      return lockWeek(state, action);\r\n    case actionTypes.SET_KCAL_AND_KG:\r\n      return setKcalAndKg(state, action);\r\n    case actionTypes.SET_WEEKLY_KCAL_AND_KG:\r\n      return setWeeklyKcalAndKg(state, action);\r\n    case actionTypes.SET_WEEKLY_TDEE:\r\n      return setWeeklyTdee(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","export const updateObject = (oldObject, updatedProperties) => {\r\n  return {\r\n    ...oldObject,\r\n    ...updatedProperties\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.scss\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\n//reducers\r\nimport calculatorReducer from \"./store/reducers/calculator\";\r\n\r\nimport { createStore, combineReducers, compose, applyMiddleware } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\n\r\n//thunk optional for now\r\nimport ReduxThunk from \"redux-thunk\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst rootReducer = combineReducers({\r\n  calculator: calculatorReducer\r\n});\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(ReduxThunk))\r\n);\r\n\r\nconst app = (\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>\r\n);\r\n\r\nReactDOM.render(app, document.getElementById(\"root\"));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}